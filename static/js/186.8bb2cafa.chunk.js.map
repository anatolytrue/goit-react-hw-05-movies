{"version":3,"file":"static/js/186.8bb2cafa.chunk.js","mappings":"oOAKe,SAASA,IAEpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBN,GAAIO,KAAKH,EAC9B,GAAE,CAACJ,IAEgB,OAAhBG,EAIJ,OACI,8BAC4B,IAAvBA,EAAYK,QACT,4BACI,0CACA,wBACKL,EAAYM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAAkB,EAATX,GACjC,OACI,2BACI,qCAAaU,MACb,uBAAIC,MAGf,UAIT,wDAIf,C,8LCrCKC,EAAM,mCAICC,EAAa,mCAAG,6FACnBC,EADmB,kEAC8CF,GAD9C,kBAIAG,EAAAA,GAAAA,IAAUD,GAJV,cAIfE,EAJe,yBAKdA,EAAOC,KAAKC,SALE,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWbC,EAAW,mCAAG,WAAMC,GAAN,gFACjBR,EADiB,4DAC0CF,EAD1C,iCACsEU,EADtE,iDAIEP,EAAAA,GAAAA,IAAUD,GAJZ,cAIbE,EAJa,yBAKZA,EAAOC,KAAKC,SALA,gCAOnBC,QAAQC,IAAR,MAPmB,yDAAH,sDAWXG,EAAiB,mCAAG,WAAMC,GAAN,gFACvBV,EADuB,6CACqBU,EADrB,oBACwCZ,EADxC,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,MALW,gCAOzBE,QAAQC,IAAR,MAPyB,yDAAH,sDAWjBK,EAAiB,mCAAG,WAAMD,GAAN,gFACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,EADhD,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,KAAKS,MALM,gCAOzBP,QAAQC,IAAR,MAPyB,yDAAH,sDAWjBd,EAAiB,mCAAG,WAAMkB,GAAN,gFACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,EADhD,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,KAAKC,SALM,gCAOzBC,QAAQC,IAAR,MAPyB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"services/moviesAPI\";\n\n\nexport default function Reviews() {\n\n    const { id } = useParams();\n    const [movieReview, setMovieReview] = useState(null);\n\n    useEffect(() => {\n        fetchMovieReviews(id).then(setMovieReview);\n    }, [id]);\n\n    if (movieReview === null) {\n        return;\n    }\n\n    return (\n        <>\n            {movieReview.length !== 0 ? (\n                <div>\n                    <h3>Movie review</h3>\n                    <ul>\n                        {movieReview.map(({ author, content, id }) => {\n                            return (\n                                <li>\n                                    <h4>Author: {author}</h4>\n                                    <p>{content}</p>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            ) : (\n                <h3>No reviews for this movie </h3>\n            )}\n        </>\n    );\n};","import axios from \"axios\";\n\nconst KEY = '49aa5ba56464fea19f5960b82707d8fc'\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const fetchTrending = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearch = async query => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCredits = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n"],"names":["Reviews","id","useParams","useState","movieReview","setMovieReview","useEffect","fetchMovieReviews","then","length","map","author","content","KEY","fetchTrending","url","axios","movies","data","results","console","log","fetchSearch","query","fetchMovieDetails","movieId","fetchMovieCredits","cast"],"sourceRoot":""}