{"version":3,"file":"static/js/694.4802b3bd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconSpin\":\"Loader_iconSpin__Pznqz\",\"loader\":\"Loader_loader__+lRPl\"};","import { ImSpinner } from 'react-icons/im';\nimport css from './Loader.module.css'\n\n\nexport default function Loader() {\n  return (\n    <div className={css.loader}>\n            <ImSpinner size=\"32\" className={css.iconSpin} />\n            Loading...\n        </div>\n  )\n}\n","\nimport { fetchMovieDetails } from '../../services/moviesAPI';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesDetailsPage = () => {\n\n    const [movieInfo, setMovieInfo] = useState(null);\n    \n    const { id } = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        fetchMovieDetails(id).then(setMovieInfo);\n    }, [id]);\n\n    if (movieInfo === null) {\n        return;\n    }\n\n    const { poster_path,\n        original_title,\n        vote_average,\n        overview,\n        release_date,\n        genres, } = movieInfo;\n    \n    const genreList = genres.map(item => item.name).join(', ');\n\n    let movieReleaseDate = release_date.split('').slice(0.4).join('');\n    if (release_date === '') {\n        movieReleaseDate = 'Unknown';\n    }\n    return (\n        <div style={{margin: 21}}>\n            <Link to={\n                location.pathname.includes('movies')\n                    ? `${location.state.from.pathname}${location.state.from.search}`\n                    : '/home'\n            }>\n                Back\n            </Link>\n            <div>\n                <img\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    alt={`${original_title}`}\n                    height={500} />\n                <div>\n                    <h2>{original_title} {movieReleaseDate}</h2>\n                    <p>User score: <span>{Math.round(vote_average * 10)}%</span></p>\n                    <h2>Overview</h2>\n                    <p>{overview}</p>\n                    <h2>Genres</h2>\n                    <p>{genreList}</p>\n                </div>\n            </div>\n\n            <p>Additional information</p>\n            <ul>\n                <li>\n                    <Link to=\"cast\" state={{ from: location.state?.from ?? '' }}>\n                        Cast\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\" state={{ from: location.state?.from ?? '' }}>\n                        Reviews\n                    </Link>\n                </li>\n            </ul>\n            <Suspense fallback={<Loader/>}>\n                <Outlet />\n            </Suspense>\n            \n        </div>\n    );\n};\n\nexport default MoviesDetailsPage;","import axios from \"axios\";\n\nconst KEY = '49aa5ba56464fea19f5960b82707d8fc'\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const fetchTrending = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearch = async query => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCredits = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n"],"names":["Loader","className","css","size","useState","movieInfo","setMovieInfo","id","useParams","location","useLocation","useEffect","fetchMovieDetails","then","poster_path","original_title","vote_average","overview","release_date","genreList","genres","map","item","name","join","movieReleaseDate","split","slice","style","margin","to","pathname","includes","state","from","search","src","alt","height","Math","round","Suspense","fallback","KEY","fetchTrending","url","axios","movies","data","results","console","log","fetchSearch","query","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}