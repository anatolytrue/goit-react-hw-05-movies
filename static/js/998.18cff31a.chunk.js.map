{"version":3,"file":"static/js/998.18cff31a.chunk.js","mappings":"6OAMe,SAASA,EAAT,GAAqC,IAAVC,EAAS,EAATA,MAEtC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,WACM,KAAVT,IAGJM,EAAgB,CAAEN,MAAAA,KAClBU,EAAAA,EAAAA,IAAYV,GAAOW,KAAKR,GACzB,GAAE,CAACH,EAAOM,IAEX,IAAMM,EAAWP,EAAaQ,IAAI,SAUlC,OARAJ,EAAAA,EAAAA,YAAU,WACS,OAAbG,IAGJF,EAAAA,EAAAA,IAAYE,GAAUD,KAAKR,EAC5B,GAAE,CAACS,EAAUN,KAIZ,8BACGJ,IACC,wBACGA,EAAUY,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMZ,GAAlC,SACGS,KAFID,EAMZ,OAMV,CC7Cc,SAASK,IACpB,OAAsCnB,EAAAA,EAAAA,UAAS,IAA/C,eAAOoB,EAAP,KAAoBC,EAApB,KACA,GAA0BrB,EAAAA,EAAAA,UAAS,IAAnC,eAAOD,EAAP,KAAcuB,EAAd,KAWA,OACI,iBAAKC,MAAO,CAACC,OAAQ,IAArB,WACI,kBAAMC,SARO,SAAAC,GACjBA,EAAEC,iBAEFL,EAASF,EACZ,EAIO,WACI,kBAAOQ,KAAK,OAAOC,KAAK,QAAQC,SAZvB,SAAAJ,GACjBL,EAAeK,EAAEK,OAAOC,MAC3B,KAWW,mBAAQJ,KAAK,SAAb,wBAEJ,SAAC9B,EAAD,CAAiBC,MAAOA,MAGnC,C,8LCvBKkC,EAAM,mCAICC,EAAa,mCAAG,6FACnBC,EADmB,kEAC8CF,GAD9C,kBAIAG,EAAAA,GAAAA,IAAUD,GAJV,cAIfE,EAJe,yBAKdA,EAAOC,KAAKC,SALE,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWbhC,EAAW,mCAAG,WAAMV,GAAN,gFACjBoC,EADiB,4DAC0CF,EAD1C,iCACsElC,EADtE,iDAIEqC,EAAAA,GAAAA,IAAUD,GAJZ,cAIbE,EAJa,yBAKZA,EAAOC,KAAKC,SALA,gCAOnBC,QAAQC,IAAR,MAPmB,yDAAH,sDAWXC,EAAiB,mCAAG,WAAMC,GAAN,gFACvBR,EADuB,6CACqBQ,EADrB,oBACwCV,EADxC,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,MALW,gCAOzBE,QAAQC,IAAR,MAPyB,yDAAH,sDAWjBG,EAAiB,mCAAG,WAAMD,GAAN,gFACvBR,EADuB,6CACqBQ,EADrB,4BACgDV,EADhD,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,KAAKO,MALM,gCAOzBL,QAAQC,IAAR,MAPyB,yDAAH,sDAWjBK,EAAiB,mCAAG,WAAMH,GAAN,gFACvBR,EADuB,6CACqBQ,EADrB,4BACgDV,EADhD,qCAIJG,EAAAA,GAAAA,IAAUD,GAJN,cAInBE,EAJmB,yBAKlBA,EAAOC,KAAKC,SALM,gCAOzBC,QAAQC,IAAR,MAPyB,yDAAH,qD","sources":["components/MovieSearchList/MovieSearchList.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchSearch } from \"services/moviesAPI\";\n\n\nexport default function MovieSearchList({ query }) {\n    \n    const [movieList, setMovieList] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setSearchParams({ query });\n    fetchSearch(query).then(setMovieList);\n  }, [query, setSearchParams]);\n\n  const urlQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (urlQuery === null) {\n      return;\n    }\n    fetchSearch(urlQuery).then(setMovieList);\n  }, [urlQuery, setSearchParams]);\n\n\n  return (\n    <>\n      {movieList && (\n        <ul>\n          {movieList.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n    \n  )\n}\n","import MovieSearchList from \"components/MovieSearchList/MovieSearchList\"\nimport { useState } from \"react\"\n\nexport default function MoviesPage() {\n    const [inputSearch, setInputSearch] = useState('');\n    const [query, setQuery] = useState('');\n\n    const handleChange = e => {\n        setInputSearch(e.target.value);\n    };\n    const handleSubmit = e => {\n        e.preventDefault();\n        // e.target.reset();\n        setQuery(inputSearch);\n    };\n\n    return (\n        <div style={{margin: 21}}>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"qiery\" onChange={handleChange} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <MovieSearchList query={query} />\n        </div>\n    )\n}\n","import axios from \"axios\";\n\nconst KEY = '49aa5ba56464fea19f5960b82707d8fc'\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nexport const fetchTrending = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearch = async query => {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCredits = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n\n    try {\n        const movies = await axios.get(url);\n        return movies.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n"],"names":["MovieSearchList","query","useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","fetchSearch","then","urlQuery","get","map","id","title","to","state","from","MoviesPage","inputSearch","setInputSearch","setQuery","style","margin","onSubmit","e","preventDefault","type","name","onChange","target","value","KEY","fetchTrending","url","axios","movies","data","results","console","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}